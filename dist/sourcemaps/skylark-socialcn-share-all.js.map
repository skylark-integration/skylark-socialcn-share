{"version":3,"sources":["skylark-socialcn-share-all.js"],"names":["define","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","QRMode","QR8bitByte","data","this","mode","prototype","getLength","buffer","length","write","i","put","charCodeAt","QRBitBuffer","Array","get","index","bufIndex","Math","floor","num","putBit","getLengthInBits","bit","push","QRMath","glog","n","Error","LOG_TABLE","gexp","EXP_TABLE","QRPolynomial","shift","undefined","offset","multiply","e","j","mod","ratio","L","M","Q","H","QRErrorCorrectLevel","QRRSBlock","totalCount","dataCount","RS_BLOCK_TABLE","getRSBlocks","typeNumber","errorCorrectLevel","rsBlock","getRsBlockTable","list","count","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","QRMaskPattern","QRUtil","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","getBCHTypeInfo","d","getBCHDigit","getBCHTypeNumber","digit","getPatternPosition","getMask","maskPattern","getErrorCorrectPolynomial","errorCorrectLength","a","type","getLostPoint","qrCode","moduleCount","getModuleCount","lostPoint","row","col","sameCount","dark","isDark","r","c","darkCount","abs","QRCode","modules","dataCache","dataList","addData","newData","make","rsBlocks","totalDataCount","makeImpl","getBestMaskPattern","test","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","minLostPoint","pattern","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","y","x","beginFill","moveTo","lineTo","endFill","pos","bits","inc","bitIndex","byteIndex","mask","PAD0","PAD1","createBytes","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","max","rsPoly","rawPoly","modPoly","modIndex","totalCodeCount","Array$indexOf","indexOf","Object$assign","Object","assign","runningInWeChat","navigator","userAgent","isMobileScreen","document","documentElement","clientWidth","image","images","src","site","getMetaContentByName","title","description","defaults","url","location","href","origin","source","imageSelector","weiboKey","wechatQrcodeTitle","wechatQrcodeHelper","wechatQrcodeSize","sites","mobileSites","disabled","initialized","templates","qzone","qq","tencent","weibo","wechat","douban","diandian","linkedin","facebook","twitter","google","share","elem","options","args","arguments","apply","target","each","it","v","k","mixin","dataset","JSON","parse","stringify","hasAttributes","attributes","attr","name","replace","all","letter","toUpperCase","value","querySelectorAlls","map","item","join","classNames","className","split","setClass","slice","addClass","createIcons","getElementsByClassName","elems","createElementByString","qrcode","$","find","appendChild","text","width","height","createWechat","getSites","isPrepend","reverse","m","fix","key","nameKey","toLowerCase","encodeURIComponent","makeUrl","link","tabindex","insertBefore","firstChild","splice","arr","len","call","inArray","str","querySelectorAll","window","jQuery","Zepto","s","match","getElementById","concat","getElementsByName","content","tag","elements","getElementsByTagName","div","html","obj","callback","hasOwnProperty","el","main"],"mappings":"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A,EAAA,IAAA,KACA,EAAA,GAAA,GAAA,EAAA,GAAA,KACA,EAAA,GAAA,GAAA,EAAA,GAAA,KACA,EAAA,GAAA,GAAA,EAAA,GAAA,KAGA,EAAA,IAAA,MACA,EAAA,GAAA,GAAA,EAAA,GAAA,KACA,EAAA,GAAA,GAAA,EAAA,GAAA,KACA,GAAA,GAAA,GAAA,EAAA,GAAA,KAGA,EAAA,IAAA,IAAA,EAAA,IAAA,MACA,EAAA,GAAA,GAAA,EAAA,GAAA,KACA,GAAA,GAAA,GAAA,EAAA,GAAA,KACA,GAAA,GAAA,GAAA,EAAA,GAAA,KAGA,EAAA,IAAA,GAAA,EAAA,IAAA,KACA,EAAA,GAAA,GAAA,EAAA,GAAA,KACA,EAAA,GAAA,GAAA,EAAA,GAAA,KACA,GAAA,GAAA,KAGA,EAAA,IAAA,GAAA,EAAA,IAAA,KACA,EAAA,GAAA,GAAA,EAAA,GAAA,KACA,GAAA,GAAA,GAAA,EAAA,GAAA,KACA,EAAA,GAAA,GAAA,GAAA,GAAA,KAGA,EAAA,IAAA,IAAA,EAAA,IAAA,MACA,GAAA,GAAA,GAAA,EAAA,GAAA,KACA,EAAA,GAAA,GAAA,GAAA,GAAA,KACA,EAAA,GAAA,GAAA,GAAA,GAAA,KAGA,EAAA,IAAA,IAAA,EAAA,IAAA,MACA,EAAA,GAAA,GAAA,EAAA,GAAA,KACA,GAAA,GAAA,GAAA,EAAA,GAAA,KACA,EAAA,GAAA,GAAA,GAAA,GAAA,KAGA,EAAA,IAAA,IAAA,EAAA,IAAA,MACA,EAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,EAAA,GAAA,KACA,EAAA,GAAA,GAAA,GAAA,GAAA,KAGA,EAAA,IAAA,IAAA,EAAA,IAAA,MACA,EAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,EAAA,GAAA,KACA,GAAA,GAAA,GAAA,GAAA,GAAA,KAGA,EAAA,IAAA,IAAA,EAAA,IAAA,MACA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,EAAA,GAAA,KACA,GAAA,GAAA,GAAA,EAAA,GAAA,KAGA,EAAA,IAAA,IAAA,EAAA,IAAA,MACA,GAAA,GAAA,KACA,EAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,KAGA,EAAA,IAAA,IAAA,EAAA,IAAA,MACA,EAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,GAAA,GAAA,KAGA,EAAA,IAAA,IAAA,EAAA,IAAA,MACA,EAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,EAAA,GAAA,KAGA,EAAA,IAAA,IAAA,EAAA,IAAA,MACA,EAAA,GAAA,GAAA,GAAA,GAAA,KACA,EAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,GAAA,GAAA,KAGA,GAAA,IAAA,IAAA,EAAA,IAAA,MACA,GAAA,GAAA,GAAA,EAAA,GAAA,KACA,GAAA,GAAA,GAAA,EAAA,GAAA,KACA,GAAA,GAAA,GAAA,EAAA,GAAA,KAGA,EAAA,IAAA,IAAA,EAAA,IAAA,MACA,GAAA,GAAA,GAAA,EAAA,GAAA,KACA,EAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,GAAA,GAAA,KAGA,EAAA,IAAA,IAAA,GAAA,IAAA,MACA,EAAA,GAAA,GAAA,GAAA,GAAA,KACA,EAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,GAAA,GAAA,KAGA,EAAA,IAAA,IAAA,EAAA,IAAA,MACA,GAAA,GAAA,GAAA,EAAA,GAAA,KACA,EAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,GAAA,GAAA,KAGA,EAAA,IAAA,IAAA,GAAA,IAAA,MACA,GAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,GAAA,GAAA,KAGA,GAAA,IAAA,IAAA,EAAA,IAAA,MACA,EAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,EAAA,GAAA,KACA,GAAA,GAAA,GAAA,GAAA,GAAA,KAGA,GAAA,IAAA,MACA,GAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,GAAA,GAA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","file":"../skylark-socialcn-share-all.js","sourcesContent":["define('skylark-jquery-qrcode/QRMode',[],function(){\r\n\t//---------------------------------------------------------------------\r\n\t// QRMode\r\n\t//---------------------------------------------------------------------\r\n\r\n\tvar QRMode = {\r\n\t\tMODE_NUMBER :\t\t1 << 0,\r\n\t\tMODE_ALPHA_NUM : \t1 << 1,\r\n\t\tMODE_8BIT_BYTE : \t1 << 2,\r\n\t\tMODE_KANJI :\t\t1 << 3\r\n\t};\r\n\r\n\treturn QRMode;\r\n});\ndefine('skylark-jquery-qrcode/QR8bitByte',[\r\n\t\"./QRMode\"\r\n],function(QRMode){\r\n\tfunction QR8bitByte(data) {\r\n\t\tthis.mode = QRMode.MODE_8BIT_BYTE;\r\n\t\tthis.data = data;\r\n\t}\r\n\r\n\tQR8bitByte.prototype = {\r\n\r\n\t\tgetLength : function(buffer) {\r\n\t\t\treturn this.data.length;\r\n\t\t},\r\n\t\t\r\n\t\twrite : function(buffer) {\r\n\t\t\tfor (var i = 0; i < this.data.length; i++) {\r\n\t\t\t\t// not JIS ...\r\n\t\t\t\tbuffer.put(this.data.charCodeAt(i), 8);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn QR8bitByte;\r\n});\r\n\ndefine('skylark-jquery-qrcode/QRBitBuffer',[],function(){\r\n\t//---------------------------------------------------------------------\r\n\t// QRBitBuffer\r\n\t//---------------------------------------------------------------------\r\n\r\n\tfunction QRBitBuffer() {\r\n\t\tthis.buffer = new Array();\r\n\t\tthis.length = 0;\r\n\t}\r\n\r\n\tQRBitBuffer.prototype = {\r\n\r\n\t\tget : function(index) {\r\n\t\t\tvar bufIndex = Math.floor(index / 8);\r\n\t\t\treturn ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\r\n\t\t},\r\n\t\t\r\n\t\tput : function(num, length) {\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tthis.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tgetLengthInBits : function() {\r\n\t\t\treturn this.length;\r\n\t\t},\r\n\t\t\r\n\t\tputBit : function(bit) {\r\n\t\t\r\n\t\t\tvar bufIndex = Math.floor(this.length / 8);\r\n\t\t\tif (this.buffer.length <= bufIndex) {\r\n\t\t\t\tthis.buffer.push(0);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (bit) {\r\n\t\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\r\n\t\t\t}\r\n\t\t\r\n\t\t\tthis.length++;\r\n\t\t}\r\n\t};\r\n\r\n\treturn QRBitBuffer;\r\n\r\n});\ndefine('skylark-jquery-qrcode/QRMath',[],function(){\r\n\t//---------------------------------------------------------------------\r\n\t// QRMath\r\n\t//---------------------------------------------------------------------\r\n\r\n\tvar QRMath = {\r\n\r\n\t\tglog : function(n) {\r\n\t\t\r\n\t\t\tif (n < 1) {\r\n\t\t\t\tthrow new Error(\"glog(\" + n + \")\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn QRMath.LOG_TABLE[n];\r\n\t\t},\r\n\t\t\r\n\t\tgexp : function(n) {\r\n\t\t\r\n\t\t\twhile (n < 0) {\r\n\t\t\t\tn += 255;\r\n\t\t\t}\r\n\t\t\r\n\t\t\twhile (n >= 256) {\r\n\t\t\t\tn -= 255;\r\n\t\t\t}\r\n\t\t\r\n\t\t\treturn QRMath.EXP_TABLE[n];\r\n\t\t},\r\n\t\t\r\n\t\tEXP_TABLE : new Array(256),\r\n\t\t\r\n\t\tLOG_TABLE : new Array(256)\r\n\r\n\t};\r\n\t\t\r\n\tfor (var i = 0; i < 8; i++) {\r\n\t\tQRMath.EXP_TABLE[i] = 1 << i;\r\n\t}\r\n\tfor (var i = 8; i < 256; i++) {\r\n\t\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\r\n\t\t\t^ QRMath.EXP_TABLE[i - 5]\r\n\t\t\t^ QRMath.EXP_TABLE[i - 6]\r\n\t\t\t^ QRMath.EXP_TABLE[i - 8];\r\n\t}\r\n\tfor (var i = 0; i < 255; i++) {\r\n\t\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i] ] = i;\r\n\t}\r\n\r\n\treturn QRMath;\r\n\r\n});\ndefine('skylark-jquery-qrcode/QRPolynomial',[\r\n\t\"./QRMath\"\r\n],function(QRMath){\r\n\t//---------------------------------------------------------------------\r\n\t// QRPolynomial\r\n\t//---------------------------------------------------------------------\r\n\r\n\tfunction QRPolynomial(num, shift) {\r\n\r\n\t\tif (num.length == undefined) {\r\n\t\t\tthrow new Error(num.length + \"/\" + shift);\r\n\t\t}\r\n\r\n\t\tvar offset = 0;\r\n\r\n\t\twhile (offset < num.length && num[offset] == 0) {\r\n\t\t\toffset++;\r\n\t\t}\r\n\r\n\t\tthis.num = new Array(num.length - offset + shift);\r\n\t\tfor (var i = 0; i < num.length - offset; i++) {\r\n\t\t\tthis.num[i] = num[i + offset];\r\n\t\t}\r\n\t}\r\n\r\n\tQRPolynomial.prototype = {\r\n\r\n\t\tget : function(index) {\r\n\t\t\treturn this.num[index];\r\n\t\t},\r\n\t\t\r\n\t\tgetLength : function() {\r\n\t\t\treturn this.num.length;\r\n\t\t},\r\n\t\t\r\n\t\tmultiply : function(e) {\r\n\t\t\r\n\t\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\r\n\t\t\r\n\t\t\tfor (var i = 0; i < this.getLength(); i++) {\r\n\t\t\t\tfor (var j = 0; j < e.getLength(); j++) {\r\n\t\t\t\t\tnum[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i) ) + QRMath.glog(e.get(j) ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\treturn new QRPolynomial(num, 0);\r\n\t\t},\r\n\t\t\r\n\t\tmod : function(e) {\r\n\t\t\r\n\t\t\tif (this.getLength() - e.getLength() < 0) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tvar ratio = QRMath.glog(this.get(0) ) - QRMath.glog(e.get(0) );\r\n\t\t\r\n\t\t\tvar num = new Array(this.getLength() );\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < this.getLength(); i++) {\r\n\t\t\t\tnum[i] = this.get(i);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < e.getLength(); i++) {\r\n\t\t\t\tnum[i] ^= QRMath.gexp(QRMath.glog(e.get(i) ) + ratio);\r\n\t\t\t}\r\n\t\t\r\n\t\t\t// recursive call\r\n\t\t\treturn new QRPolynomial(num, 0).mod(e);\r\n\t\t}\r\n\t};\r\n\r\n\treturn QRPolynomial;\r\n});\ndefine('skylark-jquery-qrcode/QRErrorCorrectLevel',[],function(){\r\n\t//---------------------------------------------------------------------\r\n\t// QRErrorCorrectLevel\r\n\t//---------------------------------------------------------------------\r\n\t \r\n\tvar QRErrorCorrectLevel = {\r\n\t\tL : 1,\r\n\t\tM : 0,\r\n\t\tQ : 3,\r\n\t\tH : 2\r\n\t};\r\n\r\n\treturn QRErrorCorrectLevel;\r\n\r\n});\ndefine('skylark-jquery-qrcode/QRRSBlock',[\r\n\t\"./QRErrorCorrectLevel\"\r\n],function(QRErrorCorrectLevel){\r\n\t//---------------------------------------------------------------------\r\n\t// QRRSBlock\r\n\t//---------------------------------------------------------------------\r\n\r\n\tfunction QRRSBlock(totalCount, dataCount) {\r\n\t\tthis.totalCount = totalCount;\r\n\t\tthis.dataCount  = dataCount;\r\n\t}\r\n\r\n\tQRRSBlock.RS_BLOCK_TABLE = [\r\n\r\n\t\t// L\r\n\t\t// M\r\n\t\t// Q\r\n\t\t// H\r\n\r\n\t\t// 1\r\n\t\t[1, 26, 19],\r\n\t\t[1, 26, 16],\r\n\t\t[1, 26, 13],\r\n\t\t[1, 26, 9],\r\n\t\t\r\n\t\t// 2\r\n\t\t[1, 44, 34],\r\n\t\t[1, 44, 28],\r\n\t\t[1, 44, 22],\r\n\t\t[1, 44, 16],\r\n\r\n\t\t// 3\r\n\t\t[1, 70, 55],\r\n\t\t[1, 70, 44],\r\n\t\t[2, 35, 17],\r\n\t\t[2, 35, 13],\r\n\r\n\t\t// 4\t\t\r\n\t\t[1, 100, 80],\r\n\t\t[2, 50, 32],\r\n\t\t[2, 50, 24],\r\n\t\t[4, 25, 9],\r\n\t\t\r\n\t\t// 5\r\n\t\t[1, 134, 108],\r\n\t\t[2, 67, 43],\r\n\t\t[2, 33, 15, 2, 34, 16],\r\n\t\t[2, 33, 11, 2, 34, 12],\r\n\t\t\r\n\t\t// 6\r\n\t\t[2, 86, 68],\r\n\t\t[4, 43, 27],\r\n\t\t[4, 43, 19],\r\n\t\t[4, 43, 15],\r\n\t\t\r\n\t\t// 7\t\t\r\n\t\t[2, 98, 78],\r\n\t\t[4, 49, 31],\r\n\t\t[2, 32, 14, 4, 33, 15],\r\n\t\t[4, 39, 13, 1, 40, 14],\r\n\t\t\r\n\t\t// 8\r\n\t\t[2, 121, 97],\r\n\t\t[2, 60, 38, 2, 61, 39],\r\n\t\t[4, 40, 18, 2, 41, 19],\r\n\t\t[4, 40, 14, 2, 41, 15],\r\n\t\t\r\n\t\t// 9\r\n\t\t[2, 146, 116],\r\n\t\t[3, 58, 36, 2, 59, 37],\r\n\t\t[4, 36, 16, 4, 37, 17],\r\n\t\t[4, 36, 12, 4, 37, 13],\r\n\t\t\r\n\t\t// 10\t\t\r\n\t\t[2, 86, 68, 2, 87, 69],\r\n\t\t[4, 69, 43, 1, 70, 44],\r\n\t\t[6, 43, 19, 2, 44, 20],\r\n\t\t[6, 43, 15, 2, 44, 16],\r\n\r\n\t\t// 11\r\n\t\t[4, 101, 81],\r\n\t\t[1, 80, 50, 4, 81, 51],\r\n\t\t[4, 50, 22, 4, 51, 23],\r\n\t\t[3, 36, 12, 8, 37, 13],\r\n\r\n\t\t// 12\r\n\t\t[2, 116, 92, 2, 117, 93],\r\n\t\t[6, 58, 36, 2, 59, 37],\r\n\t\t[4, 46, 20, 6, 47, 21],\r\n\t\t[7, 42, 14, 4, 43, 15],\r\n\r\n\t\t// 13\r\n\t\t[4, 133, 107],\r\n\t\t[8, 59, 37, 1, 60, 38],\r\n\t\t[8, 44, 20, 4, 45, 21],\r\n\t\t[12, 33, 11, 4, 34, 12],\r\n\r\n\t\t// 14\r\n\t\t[3, 145, 115, 1, 146, 116],\r\n\t\t[4, 64, 40, 5, 65, 41],\r\n\t\t[11, 36, 16, 5, 37, 17],\r\n\t\t[11, 36, 12, 5, 37, 13],\r\n\r\n\t\t// 15\r\n\t\t[5, 109, 87, 1, 110, 88],\r\n\t\t[5, 65, 41, 5, 66, 42],\r\n\t\t[5, 54, 24, 7, 55, 25],\r\n\t\t[11, 36, 12],\r\n\r\n\t\t// 16\r\n\t\t[5, 122, 98, 1, 123, 99],\r\n\t\t[7, 73, 45, 3, 74, 46],\r\n\t\t[15, 43, 19, 2, 44, 20],\r\n\t\t[3, 45, 15, 13, 46, 16],\r\n\r\n\t\t// 17\r\n\t\t[1, 135, 107, 5, 136, 108],\r\n\t\t[10, 74, 46, 1, 75, 47],\r\n\t\t[1, 50, 22, 15, 51, 23],\r\n\t\t[2, 42, 14, 17, 43, 15],\r\n\r\n\t\t// 18\r\n\t\t[5, 150, 120, 1, 151, 121],\r\n\t\t[9, 69, 43, 4, 70, 44],\r\n\t\t[17, 50, 22, 1, 51, 23],\r\n\t\t[2, 42, 14, 19, 43, 15],\r\n\r\n\t\t// 19\r\n\t\t[3, 141, 113, 4, 142, 114],\r\n\t\t[3, 70, 44, 11, 71, 45],\r\n\t\t[17, 47, 21, 4, 48, 22],\r\n\t\t[9, 39, 13, 16, 40, 14],\r\n\r\n\t\t// 20\r\n\t\t[3, 135, 107, 5, 136, 108],\r\n\t\t[3, 67, 41, 13, 68, 42],\r\n\t\t[15, 54, 24, 5, 55, 25],\r\n\t\t[15, 43, 15, 10, 44, 16],\r\n\r\n\t\t// 21\r\n\t\t[4, 144, 116, 4, 145, 117],\r\n\t\t[17, 68, 42],\r\n\t\t[17, 50, 22, 6, 51, 23],\r\n\t\t[19, 46, 16, 6, 47, 17],\r\n\r\n\t\t// 22\r\n\t\t[2, 139, 111, 7, 140, 112],\r\n\t\t[17, 74, 46],\r\n\t\t[7, 54, 24, 16, 55, 25],\r\n\t\t[34, 37, 13],\r\n\r\n\t\t// 23\r\n\t\t[4, 151, 121, 5, 152, 122],\r\n\t\t[4, 75, 47, 14, 76, 48],\r\n\t\t[11, 54, 24, 14, 55, 25],\r\n\t\t[16, 45, 15, 14, 46, 16],\r\n\r\n\t\t// 24\r\n\t\t[6, 147, 117, 4, 148, 118],\r\n\t\t[6, 73, 45, 14, 74, 46],\r\n\t\t[11, 54, 24, 16, 55, 25],\r\n\t\t[30, 46, 16, 2, 47, 17],\r\n\r\n\t\t// 25\r\n\t\t[8, 132, 106, 4, 133, 107],\r\n\t\t[8, 75, 47, 13, 76, 48],\r\n\t\t[7, 54, 24, 22, 55, 25],\r\n\t\t[22, 45, 15, 13, 46, 16],\r\n\r\n\t\t// 26\r\n\t\t[10, 142, 114, 2, 143, 115],\r\n\t\t[19, 74, 46, 4, 75, 47],\r\n\t\t[28, 50, 22, 6, 51, 23],\r\n\t\t[33, 46, 16, 4, 47, 17],\r\n\r\n\t\t// 27\r\n\t\t[8, 152, 122, 4, 153, 123],\r\n\t\t[22, 73, 45, 3, 74, 46],\r\n\t\t[8, 53, 23, 26, 54, 24],\r\n\t\t[12, 45, 15, 28, 46, 16],\r\n\r\n\t\t// 28\r\n\t\t[3, 147, 117, 10, 148, 118],\r\n\t\t[3, 73, 45, 23, 74, 46],\r\n\t\t[4, 54, 24, 31, 55, 25],\r\n\t\t[11, 45, 15, 31, 46, 16],\r\n\r\n\t\t// 29\r\n\t\t[7, 146, 116, 7, 147, 117],\r\n\t\t[21, 73, 45, 7, 74, 46],\r\n\t\t[1, 53, 23, 37, 54, 24],\r\n\t\t[19, 45, 15, 26, 46, 16],\r\n\r\n\t\t// 30\r\n\t\t[5, 145, 115, 10, 146, 116],\r\n\t\t[19, 75, 47, 10, 76, 48],\r\n\t\t[15, 54, 24, 25, 55, 25],\r\n\t\t[23, 45, 15, 25, 46, 16],\r\n\r\n\t\t// 31\r\n\t\t[13, 145, 115, 3, 146, 116],\r\n\t\t[2, 74, 46, 29, 75, 47],\r\n\t\t[42, 54, 24, 1, 55, 25],\r\n\t\t[23, 45, 15, 28, 46, 16],\r\n\r\n\t\t// 32\r\n\t\t[17, 145, 115],\r\n\t\t[10, 74, 46, 23, 75, 47],\r\n\t\t[10, 54, 24, 35, 55, 25],\r\n\t\t[19, 45, 15, 35, 46, 16],\r\n\r\n\t\t// 33\r\n\t\t[17, 145, 115, 1, 146, 116],\r\n\t\t[14, 74, 46, 21, 75, 47],\r\n\t\t[29, 54, 24, 19, 55, 25],\r\n\t\t[11, 45, 15, 46, 46, 16],\r\n\r\n\t\t// 34\r\n\t\t[13, 145, 115, 6, 146, 116],\r\n\t\t[14, 74, 46, 23, 75, 47],\r\n\t\t[44, 54, 24, 7, 55, 25],\r\n\t\t[59, 46, 16, 1, 47, 17],\r\n\r\n\t\t// 35\r\n\t\t[12, 151, 121, 7, 152, 122],\r\n\t\t[12, 75, 47, 26, 76, 48],\r\n\t\t[39, 54, 24, 14, 55, 25],\r\n\t\t[22, 45, 15, 41, 46, 16],\r\n\r\n\t\t// 36\r\n\t\t[6, 151, 121, 14, 152, 122],\r\n\t\t[6, 75, 47, 34, 76, 48],\r\n\t\t[46, 54, 24, 10, 55, 25],\r\n\t\t[2, 45, 15, 64, 46, 16],\r\n\r\n\t\t// 37\r\n\t\t[17, 152, 122, 4, 153, 123],\r\n\t\t[29, 74, 46, 14, 75, 47],\r\n\t\t[49, 54, 24, 10, 55, 25],\r\n\t\t[24, 45, 15, 46, 46, 16],\r\n\r\n\t\t// 38\r\n\t\t[4, 152, 122, 18, 153, 123],\r\n\t\t[13, 74, 46, 32, 75, 47],\r\n\t\t[48, 54, 24, 14, 55, 25],\r\n\t\t[42, 45, 15, 32, 46, 16],\r\n\r\n\t\t// 39\r\n\t\t[20, 147, 117, 4, 148, 118],\r\n\t\t[40, 75, 47, 7, 76, 48],\r\n\t\t[43, 54, 24, 22, 55, 25],\r\n\t\t[10, 45, 15, 67, 46, 16],\r\n\r\n\t\t// 40\r\n\t\t[19, 148, 118, 6, 149, 119],\r\n\t\t[18, 75, 47, 31, 76, 48],\r\n\t\t[34, 54, 24, 34, 55, 25],\r\n\t\t[20, 45, 15, 61, 46, 16]\r\n\t];\r\n\r\n\tQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\r\n\t\t\r\n\t\tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\r\n\t\t\r\n\t\tif (rsBlock == undefined) {\r\n\t\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\r\n\t\t}\r\n\r\n\t\tvar length = rsBlock.length / 3;\r\n\t\t\r\n\t\tvar list = new Array();\r\n\t\t\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\r\n\t\t\tvar count = rsBlock[i * 3 + 0];\r\n\t\t\tvar totalCount = rsBlock[i * 3 + 1];\r\n\t\t\tvar dataCount  = rsBlock[i * 3 + 2];\r\n\r\n\t\t\tfor (var j = 0; j < count; j++) {\r\n\t\t\t\tlist.push(new QRRSBlock(totalCount, dataCount) );\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn list;\r\n\t}\r\n\r\n\tQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\r\n\r\n\t\tswitch(errorCorrectLevel) {\r\n\t\tcase QRErrorCorrectLevel.L :\r\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\r\n\t\tcase QRErrorCorrectLevel.M :\r\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\r\n\t\tcase QRErrorCorrectLevel.Q :\r\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\r\n\t\tcase QRErrorCorrectLevel.H :\r\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\r\n\t\tdefault :\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\treturn QRRSBlock;\r\n});\r\n\ndefine('skylark-jquery-qrcode/QRMaskPattern',[],function(){\r\n\t//---------------------------------------------------------------------\r\n\t// QRMaskPattern\r\n\t//---------------------------------------------------------------------\r\n\r\n\tvar QRMaskPattern = {\r\n\t\tPATTERN000 : 0,\r\n\t\tPATTERN001 : 1,\r\n\t\tPATTERN010 : 2,\r\n\t\tPATTERN011 : 3,\r\n\t\tPATTERN100 : 4,\r\n\t\tPATTERN101 : 5,\r\n\t\tPATTERN110 : 6,\r\n\t\tPATTERN111 : 7\r\n\t};\r\n\r\n\treturn QRMaskPattern;\r\n\r\n});\ndefine('skylark-jquery-qrcode/QRUtil',[\r\n\t\"./QRMaskPattern\",\r\n\t\"./QRMath\",\r\n\t\"./QRMode\",\r\n\t\"./QRPolynomial\"\r\n],function(QRMaskPattern,QRMath,QRMode,QRPolynomial){\r\n\t//---------------------------------------------------------------------\r\n\t// QRUtil\r\n\t//---------------------------------------------------------------------\r\n\t \r\n\tvar QRUtil = {\r\n\r\n\t    PATTERN_POSITION_TABLE : [\r\n\t\t    [],\r\n\t\t    [6, 18],\r\n\t\t    [6, 22],\r\n\t\t    [6, 26],\r\n\t\t    [6, 30],\r\n\t\t    [6, 34],\r\n\t\t    [6, 22, 38],\r\n\t\t    [6, 24, 42],\r\n\t\t    [6, 26, 46],\r\n\t\t    [6, 28, 50],\r\n\t\t    [6, 30, 54],\t\t\r\n\t\t    [6, 32, 58],\r\n\t\t    [6, 34, 62],\r\n\t\t    [6, 26, 46, 66],\r\n\t\t    [6, 26, 48, 70],\r\n\t\t    [6, 26, 50, 74],\r\n\t\t    [6, 30, 54, 78],\r\n\t\t    [6, 30, 56, 82],\r\n\t\t    [6, 30, 58, 86],\r\n\t\t    [6, 34, 62, 90],\r\n\t\t    [6, 28, 50, 72, 94],\r\n\t\t    [6, 26, 50, 74, 98],\r\n\t\t    [6, 30, 54, 78, 102],\r\n\t\t    [6, 28, 54, 80, 106],\r\n\t\t    [6, 32, 58, 84, 110],\r\n\t\t    [6, 30, 58, 86, 114],\r\n\t\t    [6, 34, 62, 90, 118],\r\n\t\t    [6, 26, 50, 74, 98, 122],\r\n\t\t    [6, 30, 54, 78, 102, 126],\r\n\t\t    [6, 26, 52, 78, 104, 130],\r\n\t\t    [6, 30, 56, 82, 108, 134],\r\n\t\t    [6, 34, 60, 86, 112, 138],\r\n\t\t    [6, 30, 58, 86, 114, 142],\r\n\t\t    [6, 34, 62, 90, 118, 146],\r\n\t\t    [6, 30, 54, 78, 102, 126, 150],\r\n\t\t    [6, 24, 50, 76, 102, 128, 154],\r\n\t\t    [6, 28, 54, 80, 106, 132, 158],\r\n\t\t    [6, 32, 58, 84, 110, 136, 162],\r\n\t\t    [6, 26, 54, 82, 110, 138, 166],\r\n\t\t    [6, 30, 58, 86, 114, 142, 170]\r\n\t    ],\r\n\r\n\t    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\r\n\t    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\r\n\t    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)\t| (1 << 4) | (1 << 1),\r\n\r\n\t    getBCHTypeInfo : function(data) {\r\n\t\t    var d = data << 10;\r\n\t\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\r\n\t\t\t    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); \t\r\n\t\t    }\r\n\t\t    return ( (data << 10) | d) ^ QRUtil.G15_MASK;\r\n\t    },\r\n\r\n\t    getBCHTypeNumber : function(data) {\r\n\t\t    var d = data << 12;\r\n\t\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\r\n\t\t\t    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); \t\r\n\t\t    }\r\n\t\t    return (data << 12) | d;\r\n\t    },\r\n\r\n\t    getBCHDigit : function(data) {\r\n\r\n\t\t    var digit = 0;\r\n\r\n\t\t    while (data != 0) {\r\n\t\t\t    digit++;\r\n\t\t\t    data >>>= 1;\r\n\t\t    }\r\n\r\n\t\t    return digit;\r\n\t    },\r\n\r\n\t    getPatternPosition : function(typeNumber) {\r\n\t\t    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\r\n\t    },\r\n\r\n\t    getMask : function(maskPattern, i, j) {\r\n\t\t    \r\n\t\t    switch (maskPattern) {\r\n\t\t\t    \r\n\t\t    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;\r\n\t\t    case QRMaskPattern.PATTERN001 : return i % 2 == 0;\r\n\t\t    case QRMaskPattern.PATTERN010 : return j % 3 == 0;\r\n\t\t    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;\r\n\t\t    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\r\n\t\t    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;\r\n\t\t    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\r\n\t\t    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\r\n\r\n\t\t    default :\r\n\t\t\t    throw new Error(\"bad maskPattern:\" + maskPattern);\r\n\t\t    }\r\n\t    },\r\n\r\n\t    getErrorCorrectPolynomial : function(errorCorrectLength) {\r\n\r\n\t\t    var a = new QRPolynomial([1], 0);\r\n\r\n\t\t    for (var i = 0; i < errorCorrectLength; i++) {\r\n\t\t\t    a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0) );\r\n\t\t    }\r\n\r\n\t\t    return a;\r\n\t    },\r\n\r\n\t    getLengthInBits : function(mode, type) {\r\n\r\n\t\t    if (1 <= type && type < 10) {\r\n\r\n\t\t\t    // 1 - 9\r\n\r\n\t\t\t    switch(mode) {\r\n\t\t\t    case QRMode.MODE_NUMBER \t: return 10;\r\n\t\t\t    case QRMode.MODE_ALPHA_NUM \t: return 9;\r\n\t\t\t    case QRMode.MODE_8BIT_BYTE\t: return 8;\r\n\t\t\t    case QRMode.MODE_KANJI  \t: return 8;\r\n\t\t\t    default :\r\n\t\t\t\t    throw new Error(\"mode:\" + mode);\r\n\t\t\t    }\r\n\r\n\t\t    } else if (type < 27) {\r\n\r\n\t\t\t    // 10 - 26\r\n\r\n\t\t\t    switch(mode) {\r\n\t\t\t    case QRMode.MODE_NUMBER \t: return 12;\r\n\t\t\t    case QRMode.MODE_ALPHA_NUM \t: return 11;\r\n\t\t\t    case QRMode.MODE_8BIT_BYTE\t: return 16;\r\n\t\t\t    case QRMode.MODE_KANJI  \t: return 10;\r\n\t\t\t    default :\r\n\t\t\t\t    throw new Error(\"mode:\" + mode);\r\n\t\t\t    }\r\n\r\n\t\t    } else if (type < 41) {\r\n\r\n\t\t\t    // 27 - 40\r\n\r\n\t\t\t    switch(mode) {\r\n\t\t\t    case QRMode.MODE_NUMBER \t: return 14;\r\n\t\t\t    case QRMode.MODE_ALPHA_NUM\t: return 13;\r\n\t\t\t    case QRMode.MODE_8BIT_BYTE\t: return 16;\r\n\t\t\t    case QRMode.MODE_KANJI  \t: return 12;\r\n\t\t\t    default :\r\n\t\t\t\t    throw new Error(\"mode:\" + mode);\r\n\t\t\t    }\r\n\r\n\t\t    } else {\r\n\t\t\t    throw new Error(\"type:\" + type);\r\n\t\t    }\r\n\t    },\r\n\r\n\t    getLostPoint : function(qrCode) {\r\n\t\t    \r\n\t\t    var moduleCount = qrCode.getModuleCount();\r\n\t\t    \r\n\t\t    var lostPoint = 0;\r\n\t\t    \r\n\t\t    // LEVEL1\r\n\t\t    \r\n\t\t    for (var row = 0; row < moduleCount; row++) {\r\n\r\n\t\t\t    for (var col = 0; col < moduleCount; col++) {\r\n\r\n\t\t\t\t    var sameCount = 0;\r\n\t\t\t\t    var dark = qrCode.isDark(row, col);\r\n\r\n\t\t\t\t\tfor (var r = -1; r <= 1; r++) {\r\n\r\n\t\t\t\t\t    if (row + r < 0 || moduleCount <= row + r) {\r\n\t\t\t\t\t\t    continue;\r\n\t\t\t\t\t    }\r\n\r\n\t\t\t\t\t    for (var c = -1; c <= 1; c++) {\r\n\r\n\t\t\t\t\t\t    if (col + c < 0 || moduleCount <= col + c) {\r\n\t\t\t\t\t\t\t    continue;\r\n\t\t\t\t\t\t    }\r\n\r\n\t\t\t\t\t\t    if (r == 0 && c == 0) {\r\n\t\t\t\t\t\t\t    continue;\r\n\t\t\t\t\t\t    }\r\n\r\n\t\t\t\t\t\t    if (dark == qrCode.isDark(row + r, col + c) ) {\r\n\t\t\t\t\t\t\t    sameCount++;\r\n\t\t\t\t\t\t    }\r\n\t\t\t\t\t    }\r\n\t\t\t\t    }\r\n\r\n\t\t\t\t    if (sameCount > 5) {\r\n\t\t\t\t\t    lostPoint += (3 + sameCount - 5);\r\n\t\t\t\t    }\r\n\t\t\t    }\r\n\t\t    }\r\n\r\n\t\t    // LEVEL2\r\n\r\n\t\t    for (var row = 0; row < moduleCount - 1; row++) {\r\n\t\t\t    for (var col = 0; col < moduleCount - 1; col++) {\r\n\t\t\t\t    var count = 0;\r\n\t\t\t\t    if (qrCode.isDark(row,     col    ) ) count++;\r\n\t\t\t\t    if (qrCode.isDark(row + 1, col    ) ) count++;\r\n\t\t\t\t    if (qrCode.isDark(row,     col + 1) ) count++;\r\n\t\t\t\t    if (qrCode.isDark(row + 1, col + 1) ) count++;\r\n\t\t\t\t    if (count == 0 || count == 4) {\r\n\t\t\t\t\t    lostPoint += 3;\r\n\t\t\t\t    }\r\n\t\t\t    }\r\n\t\t    }\r\n\r\n\t\t    // LEVEL3\r\n\r\n\t\t    for (var row = 0; row < moduleCount; row++) {\r\n\t\t\t    for (var col = 0; col < moduleCount - 6; col++) {\r\n\t\t\t\t    if (qrCode.isDark(row, col)\r\n\t\t\t\t\t\t    && !qrCode.isDark(row, col + 1)\r\n\t\t\t\t\t\t    &&  qrCode.isDark(row, col + 2)\r\n\t\t\t\t\t\t    &&  qrCode.isDark(row, col + 3)\r\n\t\t\t\t\t\t    &&  qrCode.isDark(row, col + 4)\r\n\t\t\t\t\t\t    && !qrCode.isDark(row, col + 5)\r\n\t\t\t\t\t\t    &&  qrCode.isDark(row, col + 6) ) {\r\n\t\t\t\t\t    lostPoint += 40;\r\n\t\t\t\t    }\r\n\t\t\t    }\r\n\t\t    }\r\n\r\n\t\t    for (var col = 0; col < moduleCount; col++) {\r\n\t\t\t    for (var row = 0; row < moduleCount - 6; row++) {\r\n\t\t\t\t    if (qrCode.isDark(row, col)\r\n\t\t\t\t\t\t    && !qrCode.isDark(row + 1, col)\r\n\t\t\t\t\t\t    &&  qrCode.isDark(row + 2, col)\r\n\t\t\t\t\t\t    &&  qrCode.isDark(row + 3, col)\r\n\t\t\t\t\t\t    &&  qrCode.isDark(row + 4, col)\r\n\t\t\t\t\t\t    && !qrCode.isDark(row + 5, col)\r\n\t\t\t\t\t\t    &&  qrCode.isDark(row + 6, col) ) {\r\n\t\t\t\t\t    lostPoint += 40;\r\n\t\t\t\t    }\r\n\t\t\t    }\r\n\t\t    }\r\n\r\n\t\t    // LEVEL4\r\n\t\t    \r\n\t\t    var darkCount = 0;\r\n\r\n\t\t    for (var col = 0; col < moduleCount; col++) {\r\n\t\t\t    for (var row = 0; row < moduleCount; row++) {\r\n\t\t\t\t    if (qrCode.isDark(row, col) ) {\r\n\t\t\t\t\t    darkCount++;\r\n\t\t\t\t    }\r\n\t\t\t    }\r\n\t\t    }\r\n\t\t    \r\n\t\t    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\r\n\t\t    lostPoint += ratio * 10;\r\n\r\n\t\t    return lostPoint;\t\t\r\n\t    }\r\n\r\n\t};\r\n\r\n\treturn QRUtil;\r\n\r\n});\ndefine('skylark-jquery-qrcode/QRCode',[\r\n\t\"./QR8bitByte\",\r\n\t\"./QRBitBuffer\",\r\n\t\"./QRPolynomial\",\r\n\t\"./QRRSBlock\",\r\n\t\"./QRUtil\"\r\n],function(QR8bitByte,QRBitBuffer,QRPolynomial,QRRSBlock,QRUtil){\r\n\r\n\t//---------------------------------------------------------------------\r\n\t// QRCode\r\n\t//---------------------------------------------------------------------\r\n\r\n\tfunction QRCode(typeNumber, errorCorrectLevel) {\r\n\t\tthis.typeNumber = typeNumber;\r\n\t\tthis.errorCorrectLevel = errorCorrectLevel;\r\n\t\tthis.modules = null;\r\n\t\tthis.moduleCount = 0;\r\n\t\tthis.dataCache = null;\r\n\t\tthis.dataList = new Array();\r\n\t}\r\n\r\n\tQRCode.prototype = {\r\n\t\t\r\n\t\taddData : function(data) {\r\n\t\t\tvar newData = new QR8bitByte(data);\r\n\t\t\tthis.dataList.push(newData);\r\n\t\t\tthis.dataCache = null;\r\n\t\t},\r\n\t\t\r\n\t\tisDark : function(row, col) {\r\n\t\t\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\r\n\t\t\t\tthrow new Error(row + \",\" + col);\r\n\t\t\t}\r\n\t\t\treturn this.modules[row][col];\r\n\t\t},\r\n\r\n\t\tgetModuleCount : function() {\r\n\t\t\treturn this.moduleCount;\r\n\t\t},\r\n\t\t\r\n\t\tmake : function() {\r\n\t\t\t// Calculate automatically typeNumber if provided is < 1\r\n\t\t\tif (this.typeNumber < 1 ){\r\n\t\t\t\tvar typeNumber = 1;\r\n\t\t\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\r\n\t\t\t\t\tvar rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\r\n\r\n\t\t\t\t\tvar buffer = new QRBitBuffer();\r\n\t\t\t\t\tvar totalDataCount = 0;\r\n\t\t\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\t\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (var i = 0; i < this.dataList.length; i++) {\r\n\t\t\t\t\t\tvar data = this.dataList[i];\r\n\t\t\t\t\t\tbuffer.put(data.mode, 4);\r\n\t\t\t\t\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber) );\r\n\t\t\t\t\t\tdata.write(buffer);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.typeNumber = typeNumber;\r\n\t\t\t}\r\n\t\t\tthis.makeImpl(false, this.getBestMaskPattern() );\r\n\t\t},\r\n\t\t\r\n\t\tmakeImpl : function(test, maskPattern) {\r\n\t\t\t\r\n\t\t\tthis.moduleCount = this.typeNumber * 4 + 17;\r\n\t\t\tthis.modules = new Array(this.moduleCount);\r\n\t\t\t\r\n\t\t\tfor (var row = 0; row < this.moduleCount; row++) {\r\n\t\t\t\t\r\n\t\t\t\tthis.modules[row] = new Array(this.moduleCount);\r\n\t\t\t\t\r\n\t\t\t\tfor (var col = 0; col < this.moduleCount; col++) {\r\n\t\t\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\tthis.setupPositionProbePattern(0, 0);\r\n\t\t\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\r\n\t\t\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\r\n\t\t\tthis.setupPositionAdjustPattern();\r\n\t\t\tthis.setupTimingPattern();\r\n\t\t\tthis.setupTypeInfo(test, maskPattern);\r\n\t\t\t\r\n\t\t\tif (this.typeNumber >= 7) {\r\n\t\t\t\tthis.setupTypeNumber(test);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (this.dataCache == null) {\r\n\t\t\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tthis.mapData(this.dataCache, maskPattern);\r\n\t\t},\r\n\r\n\t\tsetupPositionProbePattern : function(row, col)  {\r\n\t\t\t\r\n\t\t\tfor (var r = -1; r <= 7; r++) {\r\n\t\t\t\t\r\n\t\t\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\r\n\t\t\t\t\r\n\t\t\t\tfor (var c = -1; c <= 7; c++) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\r\n\t\t\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\r\n\t\t\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\r\n\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\r\n\t\t\t}\t\t\r\n\t\t},\r\n\t\t\r\n\t\tgetBestMaskPattern : function() {\r\n\t\t\r\n\t\t\tvar minLostPoint = 0;\r\n\t\t\tvar pattern = 0;\r\n\t\t\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\t\r\n\t\t\t\tthis.makeImpl(true, i);\r\n\t\t\r\n\t\t\t\tvar lostPoint = QRUtil.getLostPoint(this);\r\n\t\t\r\n\t\t\t\tif (i == 0 || minLostPoint >  lostPoint) {\r\n\t\t\t\t\tminLostPoint = lostPoint;\r\n\t\t\t\t\tpattern = i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\treturn pattern;\r\n\t\t},\r\n\t\t\r\n\t\tcreateMovieClip : function(target_mc, instance_name, depth) {\r\n\t\t\r\n\t\t\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\r\n\t\t\tvar cs = 1;\r\n\t\t\r\n\t\t\tthis.make();\r\n\r\n\t\t\tfor (var row = 0; row < this.modules.length; row++) {\r\n\t\t\t\t\r\n\t\t\t\tvar y = row * cs;\r\n\t\t\t\t\r\n\t\t\t\tfor (var col = 0; col < this.modules[row].length; col++) {\r\n\t\t\r\n\t\t\t\t\tvar x = col * cs;\r\n\t\t\t\t\tvar dark = this.modules[row][col];\r\n\t\t\t\t\r\n\t\t\t\t\tif (dark) {\r\n\t\t\t\t\t\tqr_mc.beginFill(0, 100);\r\n\t\t\t\t\t\tqr_mc.moveTo(x, y);\r\n\t\t\t\t\t\tqr_mc.lineTo(x + cs, y);\r\n\t\t\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\r\n\t\t\t\t\t\tqr_mc.lineTo(x, y + cs);\r\n\t\t\t\t\t\tqr_mc.endFill();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn qr_mc;\r\n\t\t},\r\n\r\n\t\tsetupTimingPattern : function() {\r\n\t\t\t\r\n\t\t\tfor (var r = 8; r < this.moduleCount - 8; r++) {\r\n\t\t\t\tif (this.modules[r][6] != null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tthis.modules[r][6] = (r % 2 == 0);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfor (var c = 8; c < this.moduleCount - 8; c++) {\r\n\t\t\t\tif (this.modules[6][c] != null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tthis.modules[6][c] = (c % 2 == 0);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tsetupPositionAdjustPattern : function() {\r\n\t\t\r\n\t\t\tvar pos = QRUtil.getPatternPosition(this.typeNumber);\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < pos.length; i++) {\r\n\t\t\t\r\n\t\t\t\tfor (var j = 0; j < pos.length; j++) {\r\n\t\t\t\t\r\n\t\t\t\t\tvar row = pos[i];\r\n\t\t\t\t\tvar col = pos[j];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this.modules[row][col] != null) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var r = -2; r <= 2; r++) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tfor (var c = -2; c <= 2; c++) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2 \r\n\t\t\t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\r\n\t\t\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tsetupTypeNumber : function(test) {\r\n\t\t\r\n\t\t\tvar bits = QRUtil.getBCHTypeNumber(this.typeNumber);\r\n\t\t\r\n\t\t\tfor (var i = 0; i < 18; i++) {\r\n\t\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\t\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfor (var i = 0; i < 18; i++) {\r\n\t\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\t\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tsetupTypeInfo : function(test, maskPattern) {\r\n\t\t\r\n\t\t\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\r\n\t\t\tvar bits = QRUtil.getBCHTypeInfo(data);\r\n\t\t\r\n\t\t\t// vertical\t\t\r\n\t\t\tfor (var i = 0; i < 15; i++) {\r\n\t\t\r\n\t\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\t\r\n\t\t\t\tif (i < 6) {\r\n\t\t\t\t\tthis.modules[i][8] = mod;\r\n\t\t\t\t} else if (i < 8) {\r\n\t\t\t\t\tthis.modules[i + 1][8] = mod;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\t// horizontal\r\n\t\t\tfor (var i = 0; i < 15; i++) {\r\n\t\t\r\n\t\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\t\t\t\r\n\t\t\t\tif (i < 8) {\r\n\t\t\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\r\n\t\t\t\t} else if (i < 9) {\r\n\t\t\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.modules[8][15 - i - 1] = mod;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\t// fixed module\r\n\t\t\tthis.modules[this.moduleCount - 8][8] = (!test);\r\n\t\t\r\n\t\t},\r\n\t\t\r\n\t\tmapData : function(data, maskPattern) {\r\n\t\t\t\r\n\t\t\tvar inc = -1;\r\n\t\t\tvar row = this.moduleCount - 1;\r\n\t\t\tvar bitIndex = 7;\r\n\t\t\tvar byteIndex = 0;\r\n\t\t\t\r\n\t\t\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\r\n\t\t\r\n\t\t\t\tif (col == 6) col--;\r\n\t\t\r\n\t\t\t\twhile (true) {\r\n\t\t\r\n\t\t\t\t\tfor (var c = 0; c < 2; c++) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (this.modules[row][col - c] == null) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar dark = false;\r\n\t\t\r\n\t\t\t\t\t\t\tif (byteIndex < data.length) {\r\n\t\t\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t\t\tvar mask = QRUtil.getMask(maskPattern, row, col - c);\r\n\t\t\r\n\t\t\t\t\t\t\tif (mask) {\r\n\t\t\t\t\t\t\t\tdark = !dark;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.modules[row][col - c] = dark;\r\n\t\t\t\t\t\t\tbitIndex--;\r\n\t\t\r\n\t\t\t\t\t\t\tif (bitIndex == -1) {\r\n\t\t\t\t\t\t\t\tbyteIndex++;\r\n\t\t\t\t\t\t\t\tbitIndex = 7;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\trow += inc;\r\n\t\t\r\n\t\t\t\t\tif (row < 0 || this.moduleCount <= row) {\r\n\t\t\t\t\t\trow -= inc;\r\n\t\t\t\t\t\tinc = -inc;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tQRCode.PAD0 = 0xEC;\r\n\tQRCode.PAD1 = 0x11;\r\n\r\n\tQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\r\n\t\t\r\n\t\tvar rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\r\n\t\t\r\n\t\tvar buffer = new QRBitBuffer();\r\n\t\t\r\n\t\tfor (var i = 0; i < dataList.length; i++) {\r\n\t\t\tvar data = dataList[i];\r\n\t\t\tbuffer.put(data.mode, 4);\r\n\t\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber) );\r\n\t\t\tdata.write(buffer);\r\n\t\t}\r\n\r\n\t\t// calc num max data.\r\n\t\tvar totalDataCount = 0;\r\n\t\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\t\ttotalDataCount += rsBlocks[i].dataCount;\r\n\t\t}\r\n\r\n\t\tif (buffer.getLengthInBits() > totalDataCount * 8) {\r\n\t\t\tthrow new Error(\"code length overflow. (\"\r\n\t\t\t\t+ buffer.getLengthInBits()\r\n\t\t\t\t+ \">\"\r\n\t\t\t\t+  totalDataCount * 8\r\n\t\t\t\t+ \")\");\r\n\t\t}\r\n\r\n\t\t// end code\r\n\t\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\r\n\t\t\tbuffer.put(0, 4);\r\n\t\t}\r\n\r\n\t\t// padding\r\n\t\twhile (buffer.getLengthInBits() % 8 != 0) {\r\n\t\t\tbuffer.putBit(false);\r\n\t\t}\r\n\r\n\t\t// padding\r\n\t\twhile (true) {\r\n\t\t\t\r\n\t\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tbuffer.put(QRCode.PAD0, 8);\r\n\t\t\t\r\n\t\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tbuffer.put(QRCode.PAD1, 8);\r\n\t\t}\r\n\r\n\t\treturn QRCode.createBytes(buffer, rsBlocks);\r\n\t}\r\n\r\n\tQRCode.createBytes = function(buffer, rsBlocks) {\r\n\r\n\t\tvar offset = 0;\r\n\t\t\r\n\t\tvar maxDcCount = 0;\r\n\t\tvar maxEcCount = 0;\r\n\t\t\r\n\t\tvar dcdata = new Array(rsBlocks.length);\r\n\t\tvar ecdata = new Array(rsBlocks.length);\r\n\t\t\r\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\r\n\t\t\tvar dcCount = rsBlocks[r].dataCount;\r\n\t\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\r\n\r\n\t\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\r\n\t\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\r\n\t\t\t\r\n\t\t\tdcdata[r] = new Array(dcCount);\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < dcdata[r].length; i++) {\r\n\t\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\r\n\t\t\t}\r\n\t\t\toffset += dcCount;\r\n\t\t\t\r\n\t\t\tvar rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\r\n\t\t\tvar rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\r\n\r\n\t\t\tvar modPoly = rawPoly.mod(rsPoly);\r\n\t\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\r\n\t\t\tfor (var i = 0; i < ecdata[r].length; i++) {\r\n\t            var modIndex = i + modPoly.getLength() - ecdata[r].length;\r\n\t\t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t\r\n\t\tvar totalCodeCount = 0;\r\n\t\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\t\ttotalCodeCount += rsBlocks[i].totalCount;\r\n\t\t}\r\n\r\n\t\tvar data = new Array(totalCodeCount);\r\n\t\tvar index = 0;\r\n\r\n\t\tfor (var i = 0; i < maxDcCount; i++) {\r\n\t\t\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\t\t\t\tif (i < dcdata[r].length) {\r\n\t\t\t\t\tdata[index++] = dcdata[r][i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < maxEcCount; i++) {\r\n\t\t\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\t\t\t\tif (i < ecdata[r].length) {\r\n\t\t\t\t\tdata[index++] = ecdata[r][i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\treturn QRCode;\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\ndefine('skylark-socialcn-share/main',[\r\n    \"skylark-jquery-qrcode/QRCode\"\r\n], function(QRCode) {\r\n/**\r\n * social-share.js\r\n *\r\n * @author  52cik <fe.52cik@gmail.com>\r\n * @license MIT\r\n *\r\n * @example\r\n * <pre>\r\n * socialShare('.share-components');\r\n *\r\n * // or\r\n *\r\n * socialShare('.share-bar', {\r\n *     sites: ['qzone', 'qq', 'weibo','wechat'],\r\n *     // ...\r\n * });\r\n * </pre>\r\n */\r\n\r\n    // Initialize a variables.\r\n\r\n    var Array$indexOf = Array.prototype.indexOf;\r\n    var Object$assign = Object.assign;\r\n\r\n    var runningInWeChat = /MicroMessenger/i.test(navigator.userAgent);\r\n    var isMobileScreen = document.documentElement.clientWidth <= 768;\r\n\r\n    var image = (document.images[0] || 0).src || '';\r\n    var site = getMetaContentByName('site') || getMetaContentByName('Site') || document.title;\r\n    var title = getMetaContentByName('title') || getMetaContentByName('Title') || document.title;\r\n    var description = getMetaContentByName('description') || getMetaContentByName('Description') || '';\r\n\r\n    var defaults = {\r\n        url: location.href,\r\n        origin: location.origin,\r\n        source: site,\r\n        title: title,\r\n        description: description,\r\n        image: image,\r\n        imageSelector: undefined,\r\n\r\n        weiboKey: '',\r\n\r\n        wechatQrcodeTitle: '微信扫一扫：分享',\r\n        wechatQrcodeHelper: '<p>微信里点“发现”，扫一下</p><p>二维码便可将本文分享至朋友圈。</p>',\r\n        wechatQrcodeSize: 100,\r\n\r\n        sites: ['weibo', 'qq', 'wechat', 'tencent', 'douban', 'qzone', 'linkedin', 'diandian', 'facebook', 'twitter', 'google'],\r\n        mobileSites: [],\r\n        disabled: ['google', 'facebook', 'twitter', 'diandian'],\r\n        initialized: false\r\n    };\r\n\r\n    var templates = {\r\n        qzone: 'http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?url={{URL}}&title={{TITLE}}&desc={{DESCRIPTION}}&summary={{SUMMARY}}&site={{SOURCE}}',\r\n        qq: 'http://connect.qq.com/widget/shareqq/index.html?url={{URL}}&title={{TITLE}}&source={{SOURCE}}&desc={{DESCRIPTION}}&pics={{IMAGE}}&summary=\"{{SUMMARY}}\"',\r\n        tencent: 'http://share.v.t.qq.com/index.php?c=share&a=index&title={{TITLE}}&url={{URL}}&pic={{IMAGE}}',\r\n        weibo: 'https://service.weibo.com/share/share.php?url={{URL}}&title={{TITLE}}&pic={{IMAGE}}&appkey={{WEIBOKEY}}',\r\n        wechat: 'javascript:',\r\n        douban: 'http://shuo.douban.com/!service/share?href={{URL}}&name={{TITLE}}&text={{DESCRIPTION}}&image={{IMAGE}}&starid=0&aid=0&style=11',\r\n        diandian: 'http://www.diandian.com/share?lo={{URL}}&ti={{TITLE}}&type=link',\r\n        linkedin: 'http://www.linkedin.com/shareArticle?mini=true&ro=true&title={{TITLE}}&url={{URL}}&summary={{SUMMARY}}&source={{SOURCE}}&armin=armin',\r\n        facebook: 'https://www.facebook.com/sharer/sharer.php?u={{URL}}',\r\n        twitter: 'https://twitter.com/intent/tweet?text={{TITLE}}&url={{URL}}&via={{ORIGIN}}',\r\n        google: 'https://plus.google.com/share?url={{URL}}'\r\n    };\r\n\r\n\r\n    /**\r\n     * Expose API to the global\r\n     *\r\n     * @param  {String|Element} elem\r\n     * @param  {Object} options\r\n     */\r\n    var socialShare = function(elem, options) {\r\n        elem = typeof elem === 'string' ? querySelectorAlls(elem) : elem;\r\n\r\n        if (elem.length === undefined) {\r\n            elem = [elem];\r\n        }\r\n\r\n        each(elem, function(el) {\r\n            if (!el.initialized) {\r\n                share(el, options);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Initialize a share bar.\r\n     *\r\n     * @param {Object}        $options globals (optional).\r\n     *\r\n     * @return {Void}\r\n     */\r\n    function share(elem, options) {\r\n        var data = mixin({}, defaults, options || {}, dataset(elem));\r\n\r\n        if (data.imageSelector) {\r\n            data.image = querySelectorAlls(data.imageSelector).map(function(item) {\r\n                return item.src;\r\n            }).join('||');\r\n        }\r\n\r\n        addClass(elem, 'share-component social-share');\r\n        createIcons(elem, data);\r\n        createWechat(elem, data);\r\n\r\n        elem.initialized = true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Create site icons\r\n     *\r\n     * @param {Element} elem\r\n     * @param {Object} data\r\n     */\r\n    function createIcons(elem, data) {\r\n        var sites = getSites(data);\r\n        var isPrepend = data.mode == 'prepend';\r\n\r\n        each(isPrepend ? sites.reverse() : sites, function(name) {\r\n            var url = makeUrl(name, data);\r\n            var link = data.initialized ? getElementsByClassName(elem, 'icon-' + name) : createElementByString('<a class=\"social-share-icon icon-' + name + '\"></a>');\r\n\r\n            if (!link.length) {\r\n                return true;\r\n            }\r\n\r\n            link[0].href = url;\r\n\r\n            if (name === 'wechat') {\r\n                link[0].tabindex = -1;\r\n            } else {\r\n                link[0].target = '_blank';\r\n            }\r\n\r\n            if (!data.initialized) {\r\n                isPrepend ? elem.insertBefore(link[0], elem.firstChild) : elem.appendChild(link[0]);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Create the wechat icon and QRCode.\r\n     *\r\n     * @param {Element} elem\r\n     * @param {Object} data\r\n     */\r\n    function createWechat(elem, data) {\r\n        var wechat = getElementsByClassName(elem, 'icon-wechat', 'a');\r\n\r\n        if (wechat.length === 0) {\r\n            return false;\r\n        }\r\n\r\n        var elems = createElementByString('<div class=\"wechat-qrcode\"><h4>' + data.wechatQrcodeTitle + '</h4><div class=\"qrcode\"></div><div class=\"help\">' + data.wechatQrcodeHelper + '</div></div>');\r\n        // var qrcode = getElementsByClassName(elems[0], 'qrcode', 'div');\r\n        var qrcode = $(elems[0]).find('.qrcode');\r\n\r\n        wechat[0].appendChild(elems[0]);\r\n        new QRCode(qrcode[0], { text: data.url, width: data.wechatQrcodeSize, height: data.wechatQrcodeSize });\r\n    }\r\n\r\n\r\n    /**\r\n     * Get available site lists.\r\n     *\r\n     * @param {Object} data\r\n     *\r\n     * @returns {Array}\r\n     */\r\n    function getSites(data) {\r\n        if (!data['mobileSites'].length) {\r\n            data['mobileSites'] = data['sites'];\r\n        }\r\n\r\n        var sites = (isMobileScreen ? data['mobileSites'] : data['sites']).slice(0);\r\n        var disabled = data['disabled'];\r\n\r\n        if (typeof sites == 'string') {\r\n            sites = sites.split(/\\s*,\\s*/);\r\n        }\r\n        if (typeof disabled == 'string') {\r\n            disabled = disabled.split(/\\s*,\\s*/);\r\n        }\r\n\r\n        if (runningInWeChat) {\r\n            disabled.push('wechat');\r\n        }\r\n\r\n        // Remove elements\r\n        disabled.length && each(disabled, function(it) {\r\n            sites.splice(inArray(it, sites), 1);\r\n        });\r\n\r\n        return sites;\r\n    }\r\n\r\n\r\n    /**\r\n     * Build the url of icon.\r\n     *\r\n     * @param {String} name\r\n     * @param {Object} data\r\n     *\r\n     * @returns {String}\r\n     */\r\n    function makeUrl(name, data) {\r\n\r\n        if (!data['summary']) {\r\n            data['summary'] = data['description'];\r\n        }\r\n\r\n        return templates[name].replace(/\\{\\{(\\w)(\\w*)\\}\\}/g, function(m, fix, key) {\r\n            var nameKey = name + fix + key.toLowerCase();\r\n            key = (fix + key).toLowerCase();\r\n\r\n            return encodeURIComponent((data[nameKey] === undefined ? data[key] : data[nameKey]) || '');\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Supports querySelectorAll, jQuery, Zepto and simple selector.\r\n     *\r\n     * @param str\r\n     *\r\n     * @returns {*}\r\n     */\r\n    function querySelectorAlls(str) {\r\n        return (document.querySelectorAll || window.jQuery || window.Zepto || selector).call(document, str);\r\n    }\r\n\r\n\r\n    /**\r\n     * Simple selector.\r\n     *\r\n     * @param {String} str #ID or .CLASS\r\n     *\r\n     * @returns {Array}\r\n     */\r\n    function selector(str) {\r\n        var elems = [];\r\n\r\n        each(str.split(/\\s*,\\s*/), function(s) {\r\n            var m = s.match(/([#.])(\\w+)/);\r\n            if (m === null) {\r\n                throw Error('Supports only simple single #ID or .CLASS selector.');\r\n            }\r\n\r\n            if (m[1]) {\r\n                var elem = document.getElementById(m[2]);\r\n\r\n                if (elem) {\r\n                    elems.push(elem);\r\n                }\r\n            }\r\n\r\n            elems = elems.concat(getElementsByClassName(str));\r\n        });\r\n\r\n        return elems;\r\n    }\r\n\r\n\r\n    /**\r\n     * Add the classNames for element.\r\n     *\r\n     * @param {Element} elem\r\n     * @param {String} value\r\n     */\r\n    function addClass(elem, value) {\r\n        if (value && typeof value === \"string\") {\r\n            var classNames = (elem.className + ' ' + value).split(/\\s+/);\r\n            var setClass = ' ';\r\n\r\n            each(classNames, function(className) {\r\n                if (setClass.indexOf(' ' + className + ' ') < 0) {\r\n                    setClass += className + ' ';\r\n                }\r\n            });\r\n\r\n            elem.className = setClass.slice(1, -1);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Get meta element content value\r\n     *\r\n     * @param {String} name\r\n     *\r\n     * @returns {String|*}\r\n     */\r\n    function getMetaContentByName(name) {\r\n        return (document.getElementsByName(name)[0] || 0).content;\r\n    }\r\n\r\n\r\n    /**\r\n     * Get elements By className for IE8-\r\n     *\r\n     * @param {Element} elem element\r\n     * @param {String} name className\r\n     * @param {String} tag tagName\r\n     *\r\n     * @returns {HTMLCollection|Array}\r\n     */\r\n    function getElementsByClassName(elem, name, tag) {\r\n        if (elem.getElementsByClassName) {\r\n            return elem.getElementsByClassName(name);\r\n        }\r\n\r\n        var elements = [];\r\n        var elems = elem.getElementsByTagName(tag || '*');\r\n        name = ' ' + name + ' ';\r\n\r\n        each(elems, function(elem) {\r\n            if ((' ' + (elem.className || '') + ' ').indexOf(name) >= 0) {\r\n                elements.push(elem);\r\n            }\r\n        });\r\n\r\n        return elements;\r\n    }\r\n\r\n\r\n    /**\r\n     * Create element by string.\r\n     *\r\n     * @param {String} str\r\n     *\r\n     * @returns {NodeList}\r\n     */\r\n    function createElementByString(str) {\r\n        var div = $(\"<div>\").html(str);\r\n        // var div = document.createElement('div');\r\n        // div.innerHTML = str;\r\n\r\n        // return div.childNodes;\r\n        return $(div[0].firstChild);\r\n    }\r\n\r\n\r\n    /**\r\n     * Merge objects.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    function mixin() {\r\n        var args = arguments;\r\n\r\n        if (Object$assign) {\r\n            return Object$assign.apply(null, args);\r\n        }\r\n\r\n        var target = {};\r\n\r\n        each(args, function(it) {\r\n            each(it, function(v, k) {\r\n                target[k] = v;\r\n            });\r\n        });\r\n\r\n        return args[0] = target;\r\n    }\r\n\r\n\r\n    /**\r\n     * Get dataset object.\r\n     *\r\n     * @param {Element} elem\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    function dataset(elem) {\r\n        if (elem.dataset) {\r\n            return JSON.parse(JSON.stringify(elem.dataset));\r\n        }\r\n\r\n        var target = {};\r\n\r\n        if (elem.hasAttributes()) {\r\n            each(elem.attributes, function(attr) {\r\n                var name = attr.name;\r\n                if (name.indexOf('data-') !== 0) {\r\n                    return true;\r\n                }\r\n\r\n                name = name.replace(/^data-/i, '')\r\n                    .replace(/-(\\w)/g, function(all, letter) {\r\n                        return letter.toUpperCase();\r\n                    });\r\n\r\n                target[name] = attr.value;\r\n            });\r\n\r\n            return target;\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n\r\n    /**\r\n     * found element in the array.\r\n     *\r\n     * @param {Array|Object} elem\r\n     * @param {Array} arr\r\n     * @param {Number} i\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    function inArray(elem, arr, i) {\r\n        var len;\r\n\r\n        if (arr) {\r\n            if (Array$indexOf) {\r\n                return Array$indexOf.call(arr, elem, i);\r\n            }\r\n\r\n            len = arr.length;\r\n            i = i ? i < 0 ? Math.max(0, len + i) : i : 0;\r\n\r\n            for (; i < len; i++) {\r\n                // Skip accessing in sparse arrays\r\n                if (i in arr && arr[i] === elem) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n\r\n    /**\r\n     * Simple each.\r\n     *\r\n     * @param {Array|Object} obj\r\n     * @param {Function} callback\r\n     *\r\n     * @returns {*}\r\n     */\r\n    function each(obj, callback) {\r\n        var length = obj.length;\r\n\r\n        if (length === undefined) {\r\n            for (var name in obj) {\r\n                if (obj.hasOwnProperty(name)) {\r\n                    if (callback.call(obj[name], obj[name], name) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            for (var i = 0; i < length; i++) {\r\n                if (callback.call(obj[i], obj[i], i) === false) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return socialShare;\r\n    // socialShare('.social-share, .share-component');\r\n});\ndefine('skylark-socialcn-share', ['skylark-socialcn-share/main'], function (main) { return main; });\n\n"]}